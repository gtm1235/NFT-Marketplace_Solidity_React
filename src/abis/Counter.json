{
  "contractName": "Counter",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/libraries/Counters.sol\":\"Counter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/libraries/Counters.sol\":{\"keccak256\":\"0xaecdc5138344c4dd6664bedb2f59a7e399f4be20002ef9f020c73c1e9681cf5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5da6e57f2b66bb7af3493b7026b99a49ea1bb9a73dc3c9a805244c82e5b4911b\",\"dweb:/ipfs/QmR89r4jBWm2vQSBPp8DYGLmWbaJWZHeLnFD4wLRaVbYWf\"]},\"project:/src/contracts/libraries/Safemath.sol\":{\"keccak256\":\"0x1c43413663842a8f8582f5ae9fe6f645403140f1953bd9be9a01dab0a0cd18e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa775729bf18d5f1beae5f3b0188be493681d1a2be8964f512737fa9de1a421a\",\"dweb:/ipfs/QmXfXkXpKfQAU8pZq7BhEZeE5gj33LiMaZTY2F9sp1fK2r\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ccfbf0566f3a4737b0b1ab2bedf1af61b72582bee47abc8a7dfa30b079b77b4764736f6c634300080a0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ccfbf0566f3a4737b0b1ab2bedf1af61b72582bee47abc8a7dfa30b079b77b4764736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "408:526:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "408:526:13:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport './Safemath.sol';\r\n\r\n/**\r\n * @title Counters\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n */\r\n\r\nlibrary Counter {\r\n    using Safemath for uint256;\r\n \r\n //build own variable type woth the keyword 'struct'\r\n\r\n struct Counter {\r\n     uint256 _value;\r\n }\r\n\r\n//note that storage keeps valie persistantly un;ike memory\r\nfunction current(Counter storage counter) internal view returns(uint256) {\r\n    return counter._value;\r\n}\r\n\r\nfunction increment(Counter storage counter) internal {\r\n    counter._value += 1;\r\n}\r\n\r\nfunction decrement(Counter storage counter) internal {\r\n    counter._value = counter._value.subtract(1);\r\n}\r\n\r\n}",
  "sourcePath": "C:\\Users\\gtm12\\Documents\\smart_contracts_solidity\\nft-marketplace-starter-kit\\src\\contracts\\libraries\\Counters.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/libraries/Counters.sol",
    "exportedSymbols": {
      "Counter": [
        1051
      ],
      "Safemath": [
        1190
      ]
    },
    "id": 1052,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1000,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:13"
      },
      {
        "absolutePath": "project:/src/contracts/libraries/Safemath.sol",
        "file": "./Safemath.sol",
        "id": 1001,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1052,
        "sourceUnit": 1191,
        "src": "58:24:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counter",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 1002,
          "nodeType": "StructuredDocumentation",
          "src": "86:318:13",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
        },
        "fullyImplemented": true,
        "id": 1051,
        "linearizedBaseContracts": [
          1051
        ],
        "name": "Counter",
        "nameLocation": "416:7:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1005,
            "libraryName": {
              "id": 1003,
              "name": "Safemath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1190,
              "src": "437:8:13"
            },
            "nodeType": "UsingForDirective",
            "src": "431:27:13",
            "typeName": {
              "id": 1004,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "450:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counter.Counter",
            "id": 1008,
            "members": [
              {
                "constant": false,
                "id": 1007,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "551:6:13",
                "nodeType": "VariableDeclaration",
                "scope": 1008,
                "src": "543:14:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1006,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "543:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "527:7:13",
            "nodeType": "StructDefinition",
            "scope": 1051,
            "src": "520:42:13",
            "visibility": "public"
          },
          {
            "body": {
              "id": 1019,
              "nodeType": "Block",
              "src": "699:32:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1016,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "713:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                        "typeString": "struct Counter.Counter storage pointer"
                      }
                    },
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1007,
                    "src": "713:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1015,
                  "id": 1018,
                  "nodeType": "Return",
                  "src": "706:21:13"
                }
              ]
            },
            "id": 1020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "635:7:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1011,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "659:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "643:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                    "typeString": "struct Counter.Counter"
                  },
                  "typeName": {
                    "id": 1010,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1009,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1008,
                      "src": "643:7:13"
                    },
                    "referencedDeclaration": 1008,
                    "src": "643:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                      "typeString": "struct Counter.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:25:13"
            },
            "returnParameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "690:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:9:13"
            },
            "scope": 1051,
            "src": "626:105:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1032,
              "nodeType": "Block",
              "src": "788:30:13",
              "statements": [
                {
                  "expression": {
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1026,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1023,
                        "src": "795:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                          "typeString": "struct Counter.Counter storage pointer"
                        }
                      },
                      "id": 1028,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1007,
                      "src": "795:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "813:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "795:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "795:19:13"
                }
              ]
            },
            "id": 1033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "744:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1023,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "770:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "754:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                    "typeString": "struct Counter.Counter"
                  },
                  "typeName": {
                    "id": 1022,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1021,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1008,
                      "src": "754:7:13"
                    },
                    "referencedDeclaration": 1008,
                    "src": "754:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                      "typeString": "struct Counter.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "753:25:13"
            },
            "returnParameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:0:13"
            },
            "scope": 1051,
            "src": "735:83:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1049,
              "nodeType": "Block",
              "src": "875:54:13",
              "statements": [
                {
                  "expression": {
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1039,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "882:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                          "typeString": "struct Counter.Counter storage pointer"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1007,
                      "src": "882:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 1045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "923:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 1042,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1036,
                            "src": "899:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                              "typeString": "struct Counter.Counter storage pointer"
                            }
                          },
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1007,
                          "src": "899:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "subtract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1104,
                        "src": "899:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "899:26:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "882:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "882:43:13"
                }
              ]
            },
            "id": 1050,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "831:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1036,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "857:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "841:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                    "typeString": "struct Counter.Counter"
                  },
                  "typeName": {
                    "id": 1035,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1034,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1008,
                      "src": "841:7:13"
                    },
                    "referencedDeclaration": 1008,
                    "src": "841:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                      "typeString": "struct Counter.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "840:25:13"
            },
            "returnParameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:0:13"
            },
            "scope": 1051,
            "src": "822:107:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1052,
        "src": "408:526:13",
        "usedErrors": []
      }
    ],
    "src": "33:901:13"
  },
  "legacyAST": {
    "absolutePath": "project:/src/contracts/libraries/Counters.sol",
    "exportedSymbols": {
      "Counter": [
        1051
      ],
      "Safemath": [
        1190
      ]
    },
    "id": 1052,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1000,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:13"
      },
      {
        "absolutePath": "project:/src/contracts/libraries/Safemath.sol",
        "file": "./Safemath.sol",
        "id": 1001,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1052,
        "sourceUnit": 1191,
        "src": "58:24:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counter",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 1002,
          "nodeType": "StructuredDocumentation",
          "src": "86:318:13",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
        },
        "fullyImplemented": true,
        "id": 1051,
        "linearizedBaseContracts": [
          1051
        ],
        "name": "Counter",
        "nameLocation": "416:7:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1005,
            "libraryName": {
              "id": 1003,
              "name": "Safemath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1190,
              "src": "437:8:13"
            },
            "nodeType": "UsingForDirective",
            "src": "431:27:13",
            "typeName": {
              "id": 1004,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "450:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counter.Counter",
            "id": 1008,
            "members": [
              {
                "constant": false,
                "id": 1007,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "551:6:13",
                "nodeType": "VariableDeclaration",
                "scope": 1008,
                "src": "543:14:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1006,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "543:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "527:7:13",
            "nodeType": "StructDefinition",
            "scope": 1051,
            "src": "520:42:13",
            "visibility": "public"
          },
          {
            "body": {
              "id": 1019,
              "nodeType": "Block",
              "src": "699:32:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1016,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "713:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                        "typeString": "struct Counter.Counter storage pointer"
                      }
                    },
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1007,
                    "src": "713:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1015,
                  "id": 1018,
                  "nodeType": "Return",
                  "src": "706:21:13"
                }
              ]
            },
            "id": 1020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "635:7:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1011,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "659:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "643:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                    "typeString": "struct Counter.Counter"
                  },
                  "typeName": {
                    "id": 1010,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1009,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1008,
                      "src": "643:7:13"
                    },
                    "referencedDeclaration": 1008,
                    "src": "643:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                      "typeString": "struct Counter.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:25:13"
            },
            "returnParameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "690:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:9:13"
            },
            "scope": 1051,
            "src": "626:105:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1032,
              "nodeType": "Block",
              "src": "788:30:13",
              "statements": [
                {
                  "expression": {
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1026,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1023,
                        "src": "795:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                          "typeString": "struct Counter.Counter storage pointer"
                        }
                      },
                      "id": 1028,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1007,
                      "src": "795:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "813:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "795:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "795:19:13"
                }
              ]
            },
            "id": 1033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "744:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1023,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "770:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "754:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                    "typeString": "struct Counter.Counter"
                  },
                  "typeName": {
                    "id": 1022,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1021,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1008,
                      "src": "754:7:13"
                    },
                    "referencedDeclaration": 1008,
                    "src": "754:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                      "typeString": "struct Counter.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "753:25:13"
            },
            "returnParameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:0:13"
            },
            "scope": 1051,
            "src": "735:83:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1049,
              "nodeType": "Block",
              "src": "875:54:13",
              "statements": [
                {
                  "expression": {
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1039,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "882:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                          "typeString": "struct Counter.Counter storage pointer"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1007,
                      "src": "882:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 1045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "923:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 1042,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1036,
                            "src": "899:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                              "typeString": "struct Counter.Counter storage pointer"
                            }
                          },
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1007,
                          "src": "899:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "subtract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1104,
                        "src": "899:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "899:26:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "882:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "882:43:13"
                }
              ]
            },
            "id": 1050,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "831:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1036,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "857:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "841:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                    "typeString": "struct Counter.Counter"
                  },
                  "typeName": {
                    "id": 1035,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1034,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1008,
                      "src": "841:7:13"
                    },
                    "referencedDeclaration": 1008,
                    "src": "841:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1008_storage_ptr",
                      "typeString": "struct Counter.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "840:25:13"
            },
            "returnParameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:0:13"
            },
            "scope": 1051,
            "src": "822:107:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1052,
        "src": "408:526:13",
        "usedErrors": []
      }
    ],
    "src": "33:901:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-05T20:23:00.093Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
    "kind": "dev",
    "methods": {},
    "title": "Counters",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}